{"ast":null,"code":"var _jsxFileName = \"D:\\\\infy\\\\ass3\\\\BATCH-1\\\\Frontend\\\\src\\\\components\\\\EventPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './events.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventPage = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [viewCompleted, setViewCompleted] = useState(false); // State to toggle view\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if the user is logged in\n    const loggedIn = sessionStorage.getItem('loggedIn') === 'true';\n    if (!loggedIn) {\n      // Redirect to login page if the user is not logged in\n      navigate('/login');\n    } else {\n      // Fetch events data if the user is logged in\n      const fetchEvents = async () => {\n        try {\n          const response = await axios.get('http://localhost:8080/api/events');\n          setEvents(response.data);\n          console.log('Fetched events:', response.data); // Log the fetched events\n        } catch (error) {\n          console.error('Error fetching events:', error);\n          setError('Failed to fetch events. Please try again later.');\n        }\n      };\n      fetchEvents();\n    }\n  }, [navigate]);\n\n  // Function to check if the event date is in the past\n  const isEventCompleted = eventDate => {\n    const currentDate = new Date();\n    const eventDateObj = new Date(eventDate);\n    return eventDateObj < currentDate;\n  };\n\n  // Filter events based on the selected view\n  const filteredEvents = events.filter(event => viewCompleted ? isEventCompleted(event.date) : !isEventCompleted(event.date));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: viewCompleted ? 'Completed Events' : 'Upcoming Events'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setViewCompleted(!viewCompleted),\n      children: viewCompleted ? 'Show Upcoming Events' : 'Show Completed Events'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }, this), filteredEvents.length > 0 ? filteredEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: event.image_url,\n        alt: event.title,\n        className: \"event-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Game Type: \", event.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Organizer: \", event.organizer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", event.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time: \", event.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fee: RS \", event.fee]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", event.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"register-button\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)]\n    }, event.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No events available at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(EventPage, \"52t0qcvVtGz214GKNZmUg4oCpT0=\", false, function () {\n  return [useNavigate];\n});\n_c = EventPage;\nexport default EventPage;\nvar _c;\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","EventPage","_s","events","setEvents","error","setError","viewCompleted","setViewCompleted","navigate","loggedIn","sessionStorage","getItem","fetchEvents","response","get","data","console","log","isEventCompleted","eventDate","currentDate","Date","eventDateObj","filteredEvents","filter","event","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","src","image_url","alt","title","organizer","time","fee","location","id","_c","$RefreshReg$"],"sources":["D:/infy/ass3/BATCH-1/Frontend/src/components/EventPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './events.css';\r\n\r\nconst EventPage = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [viewCompleted, setViewCompleted] = useState(false); // State to toggle view\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Check if the user is logged in\r\n        const loggedIn = sessionStorage.getItem('loggedIn') === 'true';\r\n\r\n        if (!loggedIn) {\r\n            // Redirect to login page if the user is not logged in\r\n            navigate('/login');\r\n        } else {\r\n            // Fetch events data if the user is logged in\r\n            const fetchEvents = async () => {\r\n                try {\r\n                    const response = await axios.get('http://localhost:8080/api/events');\r\n                    setEvents(response.data);\r\n                    console.log('Fetched events:', response.data); // Log the fetched events\r\n                } catch (error) {\r\n                    console.error('Error fetching events:', error);\r\n                    setError('Failed to fetch events. Please try again later.');\r\n                }\r\n            };\r\n            fetchEvents();\r\n        }\r\n    }, [navigate]);\r\n\r\n    // Function to check if the event date is in the past\r\n    const isEventCompleted = (eventDate) => {\r\n        const currentDate = new Date();\r\n        const eventDateObj = new Date(eventDate);\r\n        return eventDateObj < currentDate;\r\n    };\r\n\r\n    // Filter events based on the selected view\r\n    const filteredEvents = events.filter(event => viewCompleted ? isEventCompleted(event.date) : !isEventCompleted(event.date));\r\n\r\n    return (\r\n        <div className=\"event-container\">\r\n            <h2>{viewCompleted ? 'Completed Events' : 'Upcoming Events'}</h2>\r\n            <button onClick={() => setViewCompleted(!viewCompleted)}>\r\n                {viewCompleted ? 'Show Upcoming Events' : 'Show Completed Events'}\r\n            </button>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            {filteredEvents.length > 0 ? (\r\n                filteredEvents.map(event => (\r\n                    <div key={event.id} className=\"event-box\">\r\n                        <img src={event.image_url} alt={event.title} className=\"event-image\"/>\r\n                        <div className=\"event-details\">\r\n                            <h2>Game Type: {event.title}</h2>\r\n                            <h3>Organizer: {event.organizer}</h3>\r\n                            <p>Date: {event.date}</p>\r\n                            <p>Time: {event.time}</p>\r\n                            <p>Fee: RS {event.fee}</p>\r\n                            <p>Location: {event.location}</p>\r\n                            <button className=\"register-button\">Register</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No events available at the moment.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}