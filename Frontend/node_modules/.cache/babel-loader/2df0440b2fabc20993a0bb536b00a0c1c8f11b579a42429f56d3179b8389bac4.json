{"ast":null,"code":"var _jsxFileName = \"D:\\\\infy\\\\ass3\\\\BATCH-1\\\\Frontend\\\\src\\\\components\\\\EventPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './events.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventPage = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [viewCompleted, setViewCompleted] = useState(false);\n  const [registeredEventIds, setRegisteredEventIds] = useState([]); // New state to hold registered event IDs\n  const navigate = useNavigate();\n  useEffect(() => {\n    const loggedIn = sessionStorage.getItem('loggedIn') === 'true';\n    if (!loggedIn) {\n      navigate('/login');\n    } else {\n      const username = sessionStorage.getItem('username');\n      if (username) {\n        fetchAthleteIdAndRegistrations(username);\n      } else {\n        setError('Username not found in session. Please log in again.');\n      }\n      fetchEvents();\n    }\n  }, [navigate]);\n  const fetchAthleteIdAndRegistrations = async username => {\n    try {\n      const athleteResponse = await axios.get(`http://localhost:8080/api/athletes/${username}`);\n      const athleteId = athleteResponse.data.id;\n      const registrationResponse = await axios.get(`http://localhost:8080/api/registrations?athleteId=${athleteId}`);\n      setRegisteredEventIds(registrationResponse.data.map(reg => reg.eventId)); // Store registered event IDs\n    } catch (error) {\n      console.error('Error fetching athlete ID and registrations:', error);\n      setError('Failed to fetch registrations. Please try again later.');\n    }\n  };\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/events');\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n      setError('Failed to fetch events. Please try again later.');\n    }\n  };\n  const handleRegister = async eventId => {\n    const confirmed = window.confirm(\"Are you sure you want to register for this event?\");\n    if (confirmed) {\n      const athleteId = sessionStorage.getItem('athleteId'); // Ensure athleteId is available\n      try {\n        const response = await axios.post('http://localhost:8080/api/registrations', {\n          eventId,\n          athleteId\n        });\n        alert(response.data);\n        setRegisteredEventIds([...registeredEventIds, eventId]); // Update registered events\n      } catch (error) {\n        alert('Registration failed. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: viewCompleted ? 'Completed Events' : 'Upcoming Events'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setViewCompleted(!viewCompleted),\n      children: viewCompleted ? 'Show Upcoming Events' : 'Show Completed Events'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-grid\",\n      children: events.length > 0 ? events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: event.image_url,\n          alt: event.title,\n          className: \"event-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Game Type: \", event.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Organizer: \", event.organizer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date: \", event.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time: \", event.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fee: RS \", event.fee]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", event.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), registeredEventIds.includes(event.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"registered-box\",\n            children: \"Already registered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"register-button\",\n            onClick: () => handleRegister(event.id),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No events available at the moment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(EventPage, \"3VZhIV0pHikx0CwI7AOzmhrKX7E=\", false, function () {\n  return [useNavigate];\n});\n_c = EventPage;\nexport default EventPage;\nvar _c;\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","EventPage","_s","events","setEvents","error","setError","viewCompleted","setViewCompleted","registeredEventIds","setRegisteredEventIds","navigate","loggedIn","sessionStorage","getItem","username","fetchAthleteIdAndRegistrations","fetchEvents","athleteResponse","get","athleteId","data","id","registrationResponse","map","reg","eventId","console","response","handleRegister","confirmed","window","confirm","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","event","src","image_url","alt","title","organizer","date","time","fee","location","includes","_c","$RefreshReg$"],"sources":["D:/infy/ass3/BATCH-1/Frontend/src/components/EventPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './events.css';\r\n\r\nconst EventPage = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [viewCompleted, setViewCompleted] = useState(false);\r\n    const [registeredEventIds, setRegisteredEventIds] = useState([]); // New state to hold registered event IDs\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const loggedIn = sessionStorage.getItem('loggedIn') === 'true';\r\n        if (!loggedIn) {\r\n            navigate('/login');\r\n        } else {\r\n            const username = sessionStorage.getItem('username');\r\n            if (username) {\r\n                fetchAthleteIdAndRegistrations(username);\r\n            } else {\r\n                setError('Username not found in session. Please log in again.');\r\n            }\r\n            fetchEvents();\r\n        }\r\n    }, [navigate]);\r\n\r\n    const fetchAthleteIdAndRegistrations = async (username) => {\r\n        try {\r\n            const athleteResponse = await axios.get(`http://localhost:8080/api/athletes/${username}`);\r\n            const athleteId = athleteResponse.data.id;\r\n\r\n            const registrationResponse = await axios.get(`http://localhost:8080/api/registrations?athleteId=${athleteId}`);\r\n            setRegisteredEventIds(registrationResponse.data.map(reg => reg.eventId)); // Store registered event IDs\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching athlete ID and registrations:', error);\r\n            setError('Failed to fetch registrations. Please try again later.');\r\n        }\r\n    };\r\n\r\n    const fetchEvents = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/api/events');\r\n            setEvents(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching events:', error);\r\n            setError('Failed to fetch events. Please try again later.');\r\n        }\r\n    };\r\n\r\n    const handleRegister = async (eventId) => {\r\n        const confirmed = window.confirm(\"Are you sure you want to register for this event?\");\r\n        if (confirmed) {\r\n            const athleteId = sessionStorage.getItem('athleteId'); // Ensure athleteId is available\r\n            try {\r\n                const response = await axios.post('http://localhost:8080/api/registrations', { eventId, athleteId });\r\n                alert(response.data);\r\n                setRegisteredEventIds([...registeredEventIds, eventId]); // Update registered events\r\n            } catch (error) {\r\n                alert('Registration failed. Please try again.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"event-container\">\r\n            <h2>{viewCompleted ? 'Completed Events' : 'Upcoming Events'}</h2>\r\n            <button onClick={() => setViewCompleted(!viewCompleted)}>\r\n                {viewCompleted ? 'Show Upcoming Events' : 'Show Completed Events'}\r\n            </button>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            <div className=\"event-grid\">\r\n                {events.length > 0 ? (\r\n                    events.map(event => (\r\n                        <div key={event.id} className=\"event-box\">\r\n                            <img src={event.image_url} alt={event.title} className=\"event-image\" />\r\n                            <div className=\"event-details\">\r\n                                <h2>Game Type: {event.title}</h2>\r\n                                <h3>Organizer: {event.organizer}</h3>\r\n                                <p>Date: {event.date}</p>\r\n                                <p>Time: {event.time}</p>\r\n                                <p>Fee: RS {event.fee}</p>\r\n                                <p>Location: {event.location}</p>\r\n                                {registeredEventIds.includes(event.id) ? (\r\n                                    <div className=\"registered-box\">Already registered</div>\r\n                                ) : (\r\n                                    <button className=\"register-button\" onClick={() => handleRegister(event.id)}>Register</button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No events available at the moment.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}