{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\Documents\\\\Infosys Internship Project\\\\BATCH-1\\\\BATCH-1_main2 - Copy\\\\Frontend\\\\src\\\\components\\\\login.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './login.css';\n// import { useNavigate } from 'react-router-dom';\n//\n// const LoginPage = ({ setLoggedIn }) => {\n//     const navigate = useNavigate();\n//     const [formData, setFormData] = useState({\n//         username: '',\n//         email: '',\n//         password: '',\n//         userType: 'athlete'\n//     });\n//     const [error, setError] = useState('');\n//     const [message, setMessage] = useState('');\n//\n//     const handleChange = (e) => {\n//         setFormData({\n//             ...formData,\n//             [e.target.name]: e.target.value\n//         });\n//     };\n//\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             setError('');\n//             setMessage('');\n//             const response = await axios.post('http://localhost:8080/api/login', formData);\n//             setMessage(response.data.message);\n//\n//             // Set login state and save to sessionStorage\n//             setLoggedIn(true);\n//             sessionStorage.setItem(\"loggedIn\", \"true\");\n//             sessionStorage.setItem(\"username\", formData.username); // Save username to sessionStorage\n//             if (response.data.redirectUrl) {\n//                 navigate(response.data.redirectUrl);\n//             }\n//         } catch (error) {\n//             setError(error.response?.data.error || 'Login failed. Please try again.');\n//         }\n//     };\n//\n//     return (\n//         <div className=\"login-container\">\n//             <h2>Login</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <input\n//                     type=\"text\"\n//                     name=\"username\"\n//                     placeholder=\"Username\"\n//                     value={formData.username}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"email\"\n//                     name=\"email\"\n//                     placeholder=\"Email\"\n//                     value={formData.email}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"password\"\n//                     name=\"password\"\n//                     placeholder=\"Password\"\n//                     value={formData.password}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <select\n//                     name=\"userType\"\n//                     value={formData.userType}\n//                     onChange={handleChange}\n//                 >\n//                     <option value=\"athlete\">Athlete</option>\n//                     <option value=\"coach\">Coach</option>\n//                 </select>\n//                 <button type=\"submit\">Login</button>\n//                 {message && <p className=\"success-message\">{message}</p>}\n//                 {error && <p className=\"error-message\">{error}</p>}\n//             </form>\n//         </div>\n//     );\n// };\n//\n// export default LoginPage;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './login.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  setLoggedIn\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    //        username: '',\n    email: '',\n    password: ''\n    //        userType: 'athlete' // Default user type\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Toggle password visibility\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      setError('');\n      setMessage('');\n      const response = await axios.post('http://localhost:8080/api/login', formData);\n      setMessage(response.data.message);\n\n      // Set login state and save to sessionStorage\n      setLoggedIn(true);\n      sessionStorage.setItem(\"loggedIn\", \"true\");\n      sessionStorage.setItem(\"username\", formData.username); // Save username to sessionStorage\n      //            sessionStorage.setItem(\"userType\", formData.userType); // Save userType to sessionStorage\n\n      if (response.data.redirectUrl) {\n        navigate(response.data.redirectUrl);\n      }\n    } catch (error) {\n      var _error$response;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.error) || 'Login failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"t/GARE/c1Q79rC1uRCTv72+nz6U=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","LoginPage","setLoggedIn","_s","navigate","formData","setFormData","email","password","showPassword","setShowPassword","error","setError","message","setMessage","handleChange","e","target","name","value","togglePasswordVisibility","handleSubmit","preventDefault","response","post","data","sessionStorage","setItem","username","redirectUrl","_error$response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/vishw/Documents/Infosys Internship Project/BATCH-1/BATCH-1_main2 - Copy/Frontend/src/components/login.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './login.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n//\r\n// const LoginPage = ({ setLoggedIn }) => {\r\n//     const navigate = useNavigate();\r\n//     const [formData, setFormData] = useState({\r\n//         username: '',\r\n//         email: '',\r\n//         password: '',\r\n//         userType: 'athlete'\r\n//     });\r\n//     const [error, setError] = useState('');\r\n//     const [message, setMessage] = useState('');\r\n//\r\n//     const handleChange = (e) => {\r\n//         setFormData({\r\n//             ...formData,\r\n//             [e.target.name]: e.target.value\r\n//         });\r\n//     };\r\n//\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             setError('');\r\n//             setMessage('');\r\n//             const response = await axios.post('http://localhost:8080/api/login', formData);\r\n//             setMessage(response.data.message);\r\n//\r\n//             // Set login state and save to sessionStorage\r\n//             setLoggedIn(true);\r\n//             sessionStorage.setItem(\"loggedIn\", \"true\");\r\n//             sessionStorage.setItem(\"username\", formData.username); // Save username to sessionStorage\r\n//             if (response.data.redirectUrl) {\r\n//                 navigate(response.data.redirectUrl);\r\n//             }\r\n//         } catch (error) {\r\n//             setError(error.response?.data.error || 'Login failed. Please try again.');\r\n//         }\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"login-container\">\r\n//             <h2>Login</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     name=\"username\"\r\n//                     placeholder=\"Username\"\r\n//                     value={formData.username}\r\n//                     onChange={handleChange}\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"email\"\r\n//                     name=\"email\"\r\n//                     placeholder=\"Email\"\r\n//                     value={formData.email}\r\n//                     onChange={handleChange}\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     name=\"password\"\r\n//                     placeholder=\"Password\"\r\n//                     value={formData.password}\r\n//                     onChange={handleChange}\r\n//                     required\r\n//                 />\r\n//                 <select\r\n//                     name=\"userType\"\r\n//                     value={formData.userType}\r\n//                     onChange={handleChange}\r\n//                 >\r\n//                     <option value=\"athlete\">Athlete</option>\r\n//                     <option value=\"coach\">Coach</option>\r\n//                 </select>\r\n//                 <button type=\"submit\">Login</button>\r\n//                 {message && <p className=\"success-message\">{message}</p>}\r\n//                 {error && <p className=\"error-message\">{error}</p>}\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// export default LoginPage;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './login.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginPage = ({ setLoggedIn }) => {\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n//        username: '',\r\n        email: '',\r\n        password: '',\r\n//        userType: 'athlete' // Default user type\r\n    });\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    // Toggle password visibility\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            setError('');\r\n            setMessage('');\r\n            const response = await axios.post('http://localhost:8080/api/login', formData);\r\n            setMessage(response.data.message);\r\n\r\n            // Set login state and save to sessionStorage\r\n            setLoggedIn(true);\r\n            sessionStorage.setItem(\"loggedIn\", \"true\");\r\n            sessionStorage.setItem(\"username\", formData.username); // Save username to sessionStorage\r\n//            sessionStorage.setItem(\"userType\", formData.userType); // Save userType to sessionStorage\r\n\r\n            if (response.data.redirectUrl) {\r\n                navigate(response.data.redirectUrl);\r\n            }\r\n        } catch (error) {\r\n            setError(error.response?.data.error || 'Login failed. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h2>Login</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={formData.password}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Login</button>\r\n                {message && <p className=\"success-message\">{message}</p>}\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}