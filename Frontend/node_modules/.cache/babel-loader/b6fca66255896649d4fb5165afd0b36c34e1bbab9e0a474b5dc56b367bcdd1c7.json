{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\Documents\\\\Infosys Internship Project\\\\Sports Performance Application\\\\Frontend\\\\src\\\\components\\\\events.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './events.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventPage = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [userRegistrations, setUserRegistrations] = useState([]);\n  const [error, setError] = useState('');\n  const [viewCompleted, setViewCompleted] = useState(true);\n  const [athleteId, setAthleteId] = useState(null);\n  const [userType, setUserType] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const loggedIn = sessionStorage.getItem('loggedIn') === 'true';\n    if (!loggedIn) {\n      navigate('/login');\n    } else {\n      const fetchedUserType = sessionStorage.getItem('userType');\n      setUserType(fetchedUserType || '');\n      const fetchAthleteId = async () => {\n        const username = sessionStorage.getItem('username');\n        const userType = sessionStorage.getItem('userType');\n        if (username && userType === 'athlete') {\n          try {\n            const response = await axios.get(`http://localhost:8080/api/athletes/${username}`);\n            setAthleteId(response.data.id); // Set athlete ID from response\n          } catch (error) {\n            console.error('Error fetching athlete ID:', error);\n            setError('Failed to fetch athlete ID. Please try again later.');\n          }\n        } else if (!username && userType === 'athlete') {\n          setError('Username not found in session. Please log in again.');\n        }\n      };\n      fetchAthleteId();\n      const fetchEvents = async () => {\n        try {\n          const response = await axios.get('http://localhost:8080/api/events');\n          setEvents(response.data);\n          console.log('Fetched events:', response.data); // Log the fetched events\n        } catch (error) {\n          console.error('Error fetching events:', error);\n          setError('Failed to fetch events. Please try again later.');\n        }\n      };\n      const fetchUserRegistrations = async () => {\n        if (athleteId) {\n          try {\n            const response = await axios.get(`http://localhost:8080/api/registrations?athleteId=${athleteId}`);\n            console.log('Fetched user registrations:', response.data); // Debugging\n            setUserRegistrations(Array.isArray(response.data) ? response.data : []); // Ensure it's an array\n          } catch (error) {\n            console.error('Error fetching user registrations:', error);\n            setError('Failed to fetch registrations. Please try again later.');\n          }\n        }\n      };\n      fetchEvents();\n      refreshEvents();\n      fetchUserRegistrations();\n    }\n  }, [navigate, athleteId]);\n  const isEventUpcoming = eventDate => {\n    const currentDate = new Date().toISOString().split(\"T\")[0];\n    return eventDate >= currentDate;\n  };\n  const isRegistered = eventId => {\n    return userRegistrations.some(registration => registration.eventId === eventId);\n  };\n\n  // Function to fetch user registrations\n  const updateUserRegistrations = async () => {\n    if (athleteId) {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/registrations?athleteId=${athleteId}`);\n        setUserRegistrations(Array.isArray(response.data) ? response.data : []); // Ensure it's an array\n      } catch (error) {\n        console.error('Error fetching user registrations:', error);\n      }\n    }\n  };\n  const handleRegister = async eventId => {\n    if (isRegistered(eventId)) {\n      window.alert(\"Already registered for the event\");\n      return;\n    }\n    const confirmed = window.confirm(\"Are you sure you want to register for this event?\");\n    if (confirmed) {\n      try {\n        if (!athleteId) {\n          alert('Athlete ID is not available. Please log in again.');\n          return;\n        }\n        const response = await axios.post('http://localhost:8080/api/registrations', {\n          eventId,\n          athleteId\n        });\n        alert(response.data);\n        updateUserRegistrations();\n      } catch (error) {\n        alert('Registration failed. Please try again.');\n      }\n    }\n  };\n  const renderEventCard = (event, isCompleted) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.PUBLIC_URL}/event_pics/${event.id}.webp`,\n      alt: event.title,\n      className: \"event-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Organizer: \", event.organizer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date: \", event.date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time: \", event.time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Fee: RS \", event.fee]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Location: \", event.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), userType === 'coach' ? isCompleted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/results'),\n      children: \"View Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/registrations', {\n        state: {\n          eventId: event.id\n        }\n      }),\n      children: \"View Registrations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }, this) : isCompleted ? isRegistered(event.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/results'),\n      children: \"View Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Not Participated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }, this) : isRegistered(event.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Already Registered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleRegister(event.id),\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }, this)]\n  }, event.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n  const completedEvents = events.filter(event => !isEventUpcoming(event.date));\n  const upcomingEvents = events.filter(event => isEventUpcoming(event.date));\n  const refreshEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/events');\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n      setError('Failed to fetch events. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"events-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completed-events\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Completed Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-grid\",\n        children: completedEvents.map(event => {\n          /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${process.env.PUBLIC_URL}/event_pics/${event.id}.webp`,\n              alt: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Organizer: \", event.organizer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date: \", event.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Time: \", event.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Fee: RS \", event.fee]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Location: \", event.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), userType === 'coach' ? isCompleted ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate('/results'),\n              children: \"View Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate('/registrations', {\n                state: {\n                  eventId: event.id\n                }\n              }),\n              children: \"View Registrations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 37\n            }, this) : isCompleted ? isRegistered(event.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate('/results'),\n              children: \"View Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Not Participated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 41\n            }, this) : isRegistered(event.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Already Registered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRegister(event.id),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 41\n            }, this)]\n          }, event.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upcoming-events\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upcoming Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-grid\",\n        children: upcomingEvents.map(event => {\n          /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${process.env.PUBLIC_URL}/event_pics/${event.id}.webp`,\n              alt: event.title,\n              className: \"event-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Organizer: \", event.organizer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date: \", event.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Time: \", event.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Fee: RS \", event.fee]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Location: \", event.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this), userType === 'coach' ? isCompleted ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate('/results'),\n              children: \"View Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate('/registrations', {\n                state: {\n                  eventId: event.id\n                }\n              }),\n              children: \"View Registrations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 37\n            }, this) : isCompleted ? isRegistered(event.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate('/results'),\n              children: \"View Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Not Participated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 41\n            }, this) : isRegistered(event.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Already Registered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRegister(event.id),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 41\n            }, this)]\n          }, event.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n};\n_s(EventPage, \"pwMZBb5EGQCqZfDe4OuuBFIp1Q8=\", false, function () {\n  return [useNavigate];\n});\n_c = EventPage;\nexport default EventPage;\nvar _c;\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","EventPage","_s","events","setEvents","userRegistrations","setUserRegistrations","error","setError","viewCompleted","setViewCompleted","athleteId","setAthleteId","userType","setUserType","navigate","loggedIn","sessionStorage","getItem","fetchedUserType","fetchAthleteId","username","response","get","data","id","console","fetchEvents","log","fetchUserRegistrations","Array","isArray","refreshEvents","isEventUpcoming","eventDate","currentDate","Date","toISOString","split","isRegistered","eventId","some","registration","updateUserRegistrations","handleRegister","window","alert","confirmed","confirm","post","renderEventCard","event","isCompleted","className","children","src","process","env","PUBLIC_URL","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","organizer","date","time","fee","location","onClick","state","completedEvents","filter","upcomingEvents","map","_c","$RefreshReg$"],"sources":["C:/Users/vishw/Documents/Infosys Internship Project/Sports Performance Application/Frontend/src/components/events.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './events.css';\r\n\r\nconst EventPage = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [userRegistrations, setUserRegistrations] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [viewCompleted, setViewCompleted] = useState(true);\r\n    const [athleteId, setAthleteId] = useState(null);\r\n    const [userType, setUserType] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const loggedIn = sessionStorage.getItem('loggedIn') === 'true';\r\n\r\n        if (!loggedIn) {\r\n            navigate('/login');\r\n        } else {\r\n            const fetchedUserType = sessionStorage.getItem('userType');\r\n            setUserType(fetchedUserType || '');\r\n\r\n            const fetchAthleteId = async () => {\r\n                const username = sessionStorage.getItem('username');\r\n                const userType = sessionStorage.getItem('userType');\r\n                if (username && userType==='athlete') {\r\n                    try {\r\n                        const response = await axios.get(`http://localhost:8080/api/athletes/${username}`);\r\n                        setAthleteId(response.data.id); // Set athlete ID from response\r\n                    } catch (error) {\r\n                        console.error('Error fetching athlete ID:', error);\r\n                        setError('Failed to fetch athlete ID. Please try again later.');\r\n                    }\r\n                } else if (!username && userType==='athlete'){\r\n                    setError('Username not found in session. Please log in again.');\r\n                }\r\n            };\r\n\r\n            fetchAthleteId();\r\n\r\n            const fetchEvents = async () => {\r\n                try {\r\n                    const response = await axios.get('http://localhost:8080/api/events');\r\n                    setEvents(response.data);\r\n                    console.log('Fetched events:', response.data); // Log the fetched events\r\n                } catch (error) {\r\n                    console.error('Error fetching events:', error);\r\n                    setError('Failed to fetch events. Please try again later.');\r\n                }\r\n            };\r\n\r\n            const fetchUserRegistrations = async () => {\r\n                if (athleteId) {\r\n                    try {\r\n                        const response = await axios.get(`http://localhost:8080/api/registrations?athleteId=${athleteId}`);\r\n                        console.log('Fetched user registrations:', response.data); // Debugging\r\n                        setUserRegistrations(Array.isArray(response.data) ? response.data : []); // Ensure it's an array\r\n                    } catch (error) {\r\n                        console.error('Error fetching user registrations:', error);\r\n                        setError('Failed to fetch registrations. Please try again later.');\r\n                    }\r\n                }\r\n            };\r\n\r\n            fetchEvents();\r\n            refreshEvents();\r\n            fetchUserRegistrations();\r\n        }\r\n    }, [navigate, athleteId]);\r\n\r\n    const isEventUpcoming = (eventDate) => {\r\n        const currentDate = new Date().toISOString().split(\"T\")[0];\r\n        return eventDate >= currentDate;\r\n    };\r\n\r\n    const isRegistered = (eventId) => {\r\n        return userRegistrations.some(registration => registration.eventId === eventId);\r\n    };\r\n\r\n    // Function to fetch user registrations\r\n    const updateUserRegistrations = async () => {\r\n        if (athleteId) {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8080/api/registrations?athleteId=${athleteId}`);\r\n                setUserRegistrations(Array.isArray(response.data) ? response.data : []); // Ensure it's an array\r\n            } catch (error) {\r\n                console.error('Error fetching user registrations:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleRegister = async (eventId) => {\r\n        if (isRegistered(eventId)) { \r\n            window.alert(\"Already registered for the event\");\r\n            return;\r\n        }\r\n        \r\n        const confirmed = window.confirm(\"Are you sure you want to register for this event?\");\r\n        if (confirmed) {\r\n            try {\r\n                if (!athleteId) {\r\n                    alert('Athlete ID is not available. Please log in again.');\r\n                    return;\r\n                }\r\n                const response = await axios.post('http://localhost:8080/api/registrations', { eventId, athleteId });\r\n                alert(response.data);\r\n                updateUserRegistrations();\r\n            } catch (error) {\r\n                alert('Registration failed. Please try again.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const renderEventCard = (event, isCompleted) => (\r\n        <div key={event.id} className=\"event-card\">\r\n            <img src={`${process.env.PUBLIC_URL}/event_pics/${event.id}.webp`} alt={event.title} className=\"event-image\" />\r\n            <h3>{event.title}</h3>\r\n            <p>Organizer: {event.organizer}</p>\r\n            <p>Date: {event.date}</p>\r\n            <p>Time: {event.time}</p>\r\n            <p>Fee: RS {event.fee}</p>\r\n            <p>Location: {event.location}</p>\r\n            {userType === 'coach' ? (\r\n                isCompleted ? (\r\n                    <button onClick={() => navigate('/results')}>View Results</button>\r\n                ) : (\r\n                    <button onClick={() => navigate('/registrations', { state: { eventId: event.id } })}>\r\n                        View Registrations\r\n                    </button>\r\n                )\r\n            ) : (\r\n                isCompleted ? (\r\n                    isRegistered(event.id) ? (\r\n                        <button onClick={() => navigate('/results')}>View Result</button>\r\n                    ) : (\r\n                        <button >Not Participated</button>\r\n                    )\r\n                ) : (\r\n                    isRegistered(event.id) ? (\r\n                        <button>Already Registered</button>\r\n                    ) : (\r\n                        <button onClick={() => handleRegister(event.id)}>Register</button>\r\n                    )\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    const completedEvents = events.filter(event => !isEventUpcoming(event.date));\r\n    const upcomingEvents = events.filter(event => isEventUpcoming(event.date));\r\n\r\n    const refreshEvents = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/api/events');\r\n            setEvents(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching events:', error);\r\n            setError('Failed to fetch events. Please try again later.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"events-container\">\r\n            <div className=\"completed-events\">\r\n                <h2>Completed Events</h2>\r\n                <div className=\"event-grid\">\r\n                    {completedEvents.map(event => {\r\n                        <div key={event.id} className=\"event-card\">\r\n                            <img src={`${process.env.PUBLIC_URL}/event_pics/${event.id}.webp`} alt={event.title} />\r\n                            <h3>{event.title}</h3>\r\n                            <p>Organizer: {event.organizer}</p>\r\n                            <p>Date: {event.date}</p>\r\n                            <p>Time: {event.time}</p>\r\n                            <p>Fee: RS {event.fee}</p>\r\n                            <p>Location: {event.location}</p>\r\n                            {userType === 'coach' ? (\r\n                                isCompleted ? (\r\n                                    <button onClick={() => navigate('/results')}>View Results</button>\r\n                                ) : (\r\n                                    <button onClick={() => navigate('/registrations', { state: { eventId: event.id } })}>\r\n                                        View Registrations\r\n                                    </button>\r\n                                )\r\n                            ) : (\r\n                                isCompleted ? (\r\n                                    isRegistered(event.id) ? (\r\n                                        <button onClick={() => navigate('/results')}>View Result</button>\r\n                                    ) : (\r\n                                        <button >Not Participated</button>\r\n                                    )\r\n                                ) : (\r\n                                    isRegistered(event.id) ? (\r\n                                        <button>Already Registered</button>\r\n                                    ) : (\r\n                                        <button onClick={() => handleRegister(event.id)}>Register</button>\r\n                                    )\r\n                                )\r\n                            )}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"upcoming-events\">\r\n                <h2>Upcoming Events</h2>\r\n                <div className=\"event-grid\">\r\n                    {upcomingEvents.map(event => {\r\n                        <div key={event.id} className=\"event-card\">\r\n                            <img src={`${process.env.PUBLIC_URL}/event_pics/${event.id}.webp`} alt={event.title} className=\"event-image\" />\r\n                            <h3>{event.title}</h3>\r\n                            <p>Organizer: {event.organizer}</p>\r\n                            <p>Date: {event.date}</p>\r\n                            <p>Time: {event.time}</p>\r\n                            <p>Fee: RS {event.fee}</p>\r\n                            <p>Location: {event.location}</p>\r\n                            {userType === 'coach' ? (\r\n                                isCompleted ? (\r\n                                    <button onClick={() => navigate('/results')}>View Results</button>\r\n                                ) : (\r\n                                    <button onClick={() => navigate('/registrations', { state: { eventId: event.id } })}>\r\n                                        View Registrations\r\n                                    </button>\r\n                                )\r\n                            ) : (\r\n                                isCompleted ? (\r\n                                    isRegistered(event.id) ? (\r\n                                        <button onClick={() => navigate('/results')}>View Result</button>\r\n                                    ) : (\r\n                                        <button >Not Participated</button>\r\n                                    )\r\n                                ) : (\r\n                                    isRegistered(event.id) ? (\r\n                                        <button>Already Registered</button>\r\n                                    ) : (\r\n                                        <button onClick={() => handleRegister(event.id)}>Register</button>\r\n                                    )\r\n                                )\r\n                            )}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMmB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACZ,MAAMqB,QAAQ,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;IAE9D,IAAI,CAACF,QAAQ,EAAE;MACXD,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,MAAM;MACH,MAAMI,eAAe,GAAGF,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;MAC1DJ,WAAW,CAACK,eAAe,IAAI,EAAE,CAAC;MAElC,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;QAC/B,MAAMC,QAAQ,GAAGJ,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;QACnD,MAAML,QAAQ,GAAGI,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;QACnD,IAAIG,QAAQ,IAAIR,QAAQ,KAAG,SAAS,EAAE;UAClC,IAAI;YACA,MAAMS,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,sCAAsCF,QAAQ,EAAE,CAAC;YAClFT,YAAY,CAACU,QAAQ,CAACE,IAAI,CAACC,EAAE,CAAC,CAAC,CAAC;UACpC,CAAC,CAAC,OAAOlB,KAAK,EAAE;YACZmB,OAAO,CAACnB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;YAClDC,QAAQ,CAAC,qDAAqD,CAAC;UACnE;QACJ,CAAC,MAAM,IAAI,CAACa,QAAQ,IAAIR,QAAQ,KAAG,SAAS,EAAC;UACzCL,QAAQ,CAAC,qDAAqD,CAAC;QACnE;MACJ,CAAC;MAEDY,cAAc,CAAC,CAAC;MAEhB,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;QAC5B,IAAI;UACA,MAAML,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,kCAAkC,CAAC;UACpEnB,SAAS,CAACkB,QAAQ,CAACE,IAAI,CAAC;UACxBE,OAAO,CAACE,GAAG,CAAC,iBAAiB,EAAEN,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC,OAAOjB,KAAK,EAAE;UACZmB,OAAO,CAACnB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAC9CC,QAAQ,CAAC,iDAAiD,CAAC;QAC/D;MACJ,CAAC;MAED,MAAMqB,sBAAsB,GAAG,MAAAA,CAAA,KAAY;QACvC,IAAIlB,SAAS,EAAE;UACX,IAAI;YACA,MAAMW,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,qDAAqDZ,SAAS,EAAE,CAAC;YAClGe,OAAO,CAACE,GAAG,CAAC,6BAA6B,EAAEN,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;YAC3DlB,oBAAoB,CAACwB,KAAK,CAACC,OAAO,CAACT,QAAQ,CAACE,IAAI,CAAC,GAAGF,QAAQ,CAACE,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;UAC7E,CAAC,CAAC,OAAOjB,KAAK,EAAE;YACZmB,OAAO,CAACnB,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;YAC1DC,QAAQ,CAAC,wDAAwD,CAAC;UACtE;QACJ;MACJ,CAAC;MAEDmB,WAAW,CAAC,CAAC;MACbK,aAAa,CAAC,CAAC;MACfH,sBAAsB,CAAC,CAAC;IAC5B;EACJ,CAAC,EAAE,CAACd,QAAQ,EAAEJ,SAAS,CAAC,CAAC;EAEzB,MAAMsB,eAAe,GAAIC,SAAS,IAAK;IACnC,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1D,OAAOJ,SAAS,IAAIC,WAAW;EACnC,CAAC;EAED,MAAMI,YAAY,GAAIC,OAAO,IAAK;IAC9B,OAAOnC,iBAAiB,CAACoC,IAAI,CAACC,YAAY,IAAIA,YAAY,CAACF,OAAO,KAAKA,OAAO,CAAC;EACnF,CAAC;;EAED;EACA,MAAMG,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAIhC,SAAS,EAAE;MACX,IAAI;QACA,MAAMW,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,qDAAqDZ,SAAS,EAAE,CAAC;QAClGL,oBAAoB,CAACwB,KAAK,CAACC,OAAO,CAACT,QAAQ,CAACE,IAAI,CAAC,GAAGF,QAAQ,CAACE,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;MAC7E,CAAC,CAAC,OAAOjB,KAAK,EAAE;QACZmB,OAAO,CAACnB,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC9D;IACJ;EACJ,CAAC;EAED,MAAMqC,cAAc,GAAG,MAAOJ,OAAO,IAAK;IACtC,IAAID,YAAY,CAACC,OAAO,CAAC,EAAE;MACvBK,MAAM,CAACC,KAAK,CAAC,kCAAkC,CAAC;MAChD;IACJ;IAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,OAAO,CAAC,mDAAmD,CAAC;IACrF,IAAID,SAAS,EAAE;MACX,IAAI;QACA,IAAI,CAACpC,SAAS,EAAE;UACZmC,KAAK,CAAC,mDAAmD,CAAC;UAC1D;QACJ;QACA,MAAMxB,QAAQ,GAAG,MAAMzB,KAAK,CAACoD,IAAI,CAAC,yCAAyC,EAAE;UAAET,OAAO;UAAE7B;QAAU,CAAC,CAAC;QACpGmC,KAAK,CAACxB,QAAQ,CAACE,IAAI,CAAC;QACpBmB,uBAAuB,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOpC,KAAK,EAAE;QACZuC,KAAK,CAAC,wCAAwC,CAAC;MACnD;IACJ;EACJ,CAAC;EAED,MAAMI,eAAe,GAAGA,CAACC,KAAK,EAAEC,WAAW,kBACvCpD,OAAA;IAAoBqD,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACtCtD,OAAA;MAAKuD,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,eAAeP,KAAK,CAAC1B,EAAE,OAAQ;MAACkC,GAAG,EAAER,KAAK,CAACS,KAAM;MAACP,SAAS,EAAC;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/GhE,OAAA;MAAAsD,QAAA,EAAKH,KAAK,CAACS;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBhE,OAAA;MAAAsD,QAAA,GAAG,aAAW,EAACH,KAAK,CAACc,SAAS;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnChE,OAAA;MAAAsD,QAAA,GAAG,QAAM,EAACH,KAAK,CAACe,IAAI;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBhE,OAAA;MAAAsD,QAAA,GAAG,QAAM,EAACH,KAAK,CAACgB,IAAI;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBhE,OAAA;MAAAsD,QAAA,GAAG,UAAQ,EAACH,KAAK,CAACiB,GAAG;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhE,OAAA;MAAAsD,QAAA,GAAG,YAAU,EAACH,KAAK,CAACkB,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChCnD,QAAQ,KAAK,OAAO,GACjBuC,WAAW,gBACPpD,OAAA;MAAQsE,OAAO,EAAEA,CAAA,KAAMvD,QAAQ,CAAC,UAAU,CAAE;MAAAuC,QAAA,EAAC;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAElEhE,OAAA;MAAQsE,OAAO,EAAEA,CAAA,KAAMvD,QAAQ,CAAC,gBAAgB,EAAE;QAAEwD,KAAK,EAAE;UAAE/B,OAAO,EAAEW,KAAK,CAAC1B;QAAG;MAAE,CAAC,CAAE;MAAA6B,QAAA,EAAC;IAErF;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACX,GAEDZ,WAAW,GACPb,YAAY,CAACY,KAAK,CAAC1B,EAAE,CAAC,gBAClBzB,OAAA;MAAQsE,OAAO,EAAEA,CAAA,KAAMvD,QAAQ,CAAC,UAAU,CAAE;MAAAuC,QAAA,EAAC;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAEjEhE,OAAA;MAAAsD,QAAA,EAAS;IAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACpC,GAEDzB,YAAY,CAACY,KAAK,CAAC1B,EAAE,CAAC,gBAClBzB,OAAA;MAAAsD,QAAA,EAAQ;IAAkB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAEnChE,OAAA;MAAQsE,OAAO,EAAEA,CAAA,KAAM1B,cAAc,CAACO,KAAK,CAAC1B,EAAE,CAAE;MAAA6B,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAG5E;EAAA,GA9BKb,KAAK,CAAC1B,EAAE;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA+Bb,CACR;EAED,MAAMQ,eAAe,GAAGrE,MAAM,CAACsE,MAAM,CAACtB,KAAK,IAAI,CAAClB,eAAe,CAACkB,KAAK,CAACe,IAAI,CAAC,CAAC;EAC5E,MAAMQ,cAAc,GAAGvE,MAAM,CAACsE,MAAM,CAACtB,KAAK,IAAIlB,eAAe,CAACkB,KAAK,CAACe,IAAI,CAAC,CAAC;EAE1E,MAAMlC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMV,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,kCAAkC,CAAC;MACpEnB,SAAS,CAACkB,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACZmB,OAAO,CAACnB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,QAAQ,CAAC,iDAAiD,CAAC;IAC/D;EACJ,CAAC;EAED,oBACIR,OAAA;IAAKqD,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BtD,OAAA;MAAKqD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7BtD,OAAA;QAAAsD,QAAA,EAAI;MAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBhE,OAAA;QAAKqD,SAAS,EAAC,YAAY;QAAAC,QAAA,EACtBkB,eAAe,CAACG,GAAG,CAACxB,KAAK,IAAI;UAC1B,aAAAnD,OAAA;YAAoBqD,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACtCtD,OAAA;cAAKuD,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,eAAeP,KAAK,CAAC1B,EAAE,OAAQ;cAACkC,GAAG,EAAER,KAAK,CAACS;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACvFhE,OAAA;cAAAsD,QAAA,EAAKH,KAAK,CAACS;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtBhE,OAAA;cAAAsD,QAAA,GAAG,aAAW,EAACH,KAAK,CAACc,SAAS;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnChE,OAAA;cAAAsD,QAAA,GAAG,QAAM,EAACH,KAAK,CAACe,IAAI;YAAA;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzBhE,OAAA;cAAAsD,QAAA,GAAG,QAAM,EAACH,KAAK,CAACgB,IAAI;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzBhE,OAAA;cAAAsD,QAAA,GAAG,UAAQ,EAACH,KAAK,CAACiB,GAAG;YAAA;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1BhE,OAAA;cAAAsD,QAAA,GAAG,YAAU,EAACH,KAAK,CAACkB,QAAQ;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAChCnD,QAAQ,KAAK,OAAO,GACjBuC,WAAW,gBACPpD,OAAA;cAAQsE,OAAO,EAAEA,CAAA,KAAMvD,QAAQ,CAAC,UAAU,CAAE;cAAAuC,QAAA,EAAC;YAAY;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gBAElEhE,OAAA;cAAQsE,OAAO,EAAEA,CAAA,KAAMvD,QAAQ,CAAC,gBAAgB,EAAE;gBAAEwD,KAAK,EAAE;kBAAE/B,OAAO,EAAEW,KAAK,CAAC1B;gBAAG;cAAE,CAAC,CAAE;cAAA6B,QAAA,EAAC;YAErF;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACX,GAEDZ,WAAW,GACPb,YAAY,CAACY,KAAK,CAAC1B,EAAE,CAAC,gBAClBzB,OAAA;cAAQsE,OAAO,EAAEA,CAAA,KAAMvD,QAAQ,CAAC,UAAU,CAAE;cAAAuC,QAAA,EAAC;YAAW;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gBAEjEhE,OAAA;cAAAsD,QAAA,EAAS;YAAgB;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACpC,GAEDzB,YAAY,CAACY,KAAK,CAAC1B,EAAE,CAAC,gBAClBzB,OAAA;cAAAsD,QAAA,EAAQ;YAAkB;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gBAEnChE,OAAA;cAAQsE,OAAO,EAAEA,CAAA,KAAM1B,cAAc,CAACO,KAAK,CAAC1B,EAAE,CAAE;cAAA6B,QAAA,EAAC;YAAQ;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAG5E;UAAA,GA9BKb,KAAK,CAAC1B,EAAE;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA+Bb,CAAC;QACV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNhE,OAAA;MAAKqD,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BtD,OAAA;QAAAsD,QAAA,EAAI;MAAe;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBhE,OAAA;QAAKqD,SAAS,EAAC,YAAY;QAAAC,QAAA,EACtBoB,cAAc,CAACC,GAAG,CAACxB,KAAK,IAAI;UACzB,aAAAnD,OAAA;YAAoBqD,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACtCtD,OAAA;cAAKuD,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,eAAeP,KAAK,CAAC1B,EAAE,OAAQ;cAACkC,GAAG,EAAER,KAAK,CAACS,KAAM;cAACP,SAAS,EAAC;YAAa;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC/GhE,OAAA;cAAAsD,QAAA,EAAKH,KAAK,CAACS;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtBhE,OAAA;cAAAsD,QAAA,GAAG,aAAW,EAACH,KAAK,CAACc,SAAS;YAAA;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnChE,OAAA;cAAAsD,QAAA,GAAG,QAAM,EAACH,KAAK,CAACe,IAAI;YAAA;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzBhE,OAAA;cAAAsD,QAAA,GAAG,QAAM,EAACH,KAAK,CAACgB,IAAI;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzBhE,OAAA;cAAAsD,QAAA,GAAG,UAAQ,EAACH,KAAK,CAACiB,GAAG;YAAA;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1BhE,OAAA;cAAAsD,QAAA,GAAG,YAAU,EAACH,KAAK,CAACkB,QAAQ;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAChCnD,QAAQ,KAAK,OAAO,GACjBuC,WAAW,gBACPpD,OAAA;cAAQsE,OAAO,EAAEA,CAAA,KAAMvD,QAAQ,CAAC,UAAU,CAAE;cAAAuC,QAAA,EAAC;YAAY;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gBAElEhE,OAAA;cAAQsE,OAAO,EAAEA,CAAA,KAAMvD,QAAQ,CAAC,gBAAgB,EAAE;gBAAEwD,KAAK,EAAE;kBAAE/B,OAAO,EAAEW,KAAK,CAAC1B;gBAAG;cAAE,CAAC,CAAE;cAAA6B,QAAA,EAAC;YAErF;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACX,GAEDZ,WAAW,GACPb,YAAY,CAACY,KAAK,CAAC1B,EAAE,CAAC,gBAClBzB,OAAA;cAAQsE,OAAO,EAAEA,CAAA,KAAMvD,QAAQ,CAAC,UAAU,CAAE;cAAAuC,QAAA,EAAC;YAAW;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gBAEjEhE,OAAA;cAAAsD,QAAA,EAAS;YAAgB;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACpC,GAEDzB,YAAY,CAACY,KAAK,CAAC1B,EAAE,CAAC,gBAClBzB,OAAA;cAAAsD,QAAA,EAAQ;YAAkB;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gBAEnChE,OAAA;cAAQsE,OAAO,EAAEA,CAAA,KAAM1B,cAAc,CAACO,KAAK,CAAC1B,EAAE,CAAE;cAAA6B,QAAA,EAAC;YAAQ;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAG5E;UAAA,GA9BKb,KAAK,CAAC1B,EAAE;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA+Bb,CAAC;QACV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC9D,EAAA,CA/OID,SAAS;EAAA,QAOMH,WAAW;AAAA;AAAA8E,EAAA,GAP1B3E,SAAS;AAiPf,eAAeA,SAAS;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}