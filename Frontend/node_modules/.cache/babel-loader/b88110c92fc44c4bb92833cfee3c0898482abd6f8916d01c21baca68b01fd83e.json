{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\Documents\\\\Infosys Internship Project\\\\BATCH-1\\\\BATCH-1_main2 - Copy\\\\Frontend\\\\src\\\\components\\\\registrations.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport './registrations.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegistrationsPage = () => {\n  _s();\n  var _location$state;\n  const [registrations, setRegistrations] = useState([]);\n  const [error, setError] = useState('');\n  const location = useLocation();\n  const eventId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.eventId;\n  useEffect(() => {\n    const fetchRegistrations = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/registrations/event/${eventId}`);\n        setRegistrations(Array.isArray(response.data) ? response.data : []);\n      } catch (error) {\n        console.error('Error fetching registrations:', error);\n        setError('Failed to fetch registrations. Please try again later.');\n        setRegistrations([]);\n      }\n    };\n    if (eventId) fetchRegistrations();\n  }, [eventId]);\n  const updateStatus = async (registrationId, newStatus) => {\n    try {\n      await axios.patch(`http://localhost:8080/api/registrations/${registrationId}/status?status=${newStatus}`);\n      setRegistrations(prevRegistrations => prevRegistrations.map(registration => registration.registrationId === registrationId ? {\n        ...registration,\n        status: newStatus\n      } : registration));\n    } catch (error) {\n      console.error('Error updating registration status:', error);\n      setError('Failed to update status. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registrations-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Registrations for Event \", eventId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"registrations-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Registration ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Athlete ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Event ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Registration Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: registrations.map(registration => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: registration.registrationId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: registration.athleteId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: registration.eventId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(registration.registrationDate).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `status-${registration.status.toLowerCase()}`,\n            children: registration.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: registration.status === 'pending' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"accept-button\",\n                onClick: () => updateStatus(registration.registrationId, 'accepted'),\n                children: \"Accept\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"reject-button\",\n                onClick: () => updateStatus(registration.registrationId, 'rejected'),\n                children: \"Reject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, registration.registrationId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(RegistrationsPage, \"lh97glc1fyBe0SwroOy3L+r/Rr0=\", false, function () {\n  return [useLocation];\n});\n_c = RegistrationsPage;\nexport default RegistrationsPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationsPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","RegistrationsPage","_s","_location$state","registrations","setRegistrations","error","setError","location","eventId","state","fetchRegistrations","response","get","Array","isArray","data","console","updateStatus","registrationId","newStatus","patch","prevRegistrations","map","registration","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","athleteId","Date","registrationDate","toLocaleDateString","toLowerCase","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vishw/Documents/Infosys Internship Project/BATCH-1/BATCH-1_main2 - Copy/Frontend/src/components/registrations.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './registrations.css';\r\n\r\nconst RegistrationsPage = () => {\r\n    const [registrations, setRegistrations] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const location = useLocation();\r\n    const eventId = location.state?.eventId;\r\n\r\n    useEffect(() => {\r\n        const fetchRegistrations = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8080/api/registrations/event/${eventId}`);\r\n                setRegistrations(Array.isArray(response.data) ? response.data : []);\r\n            } catch (error) {\r\n                console.error('Error fetching registrations:', error);\r\n                setError('Failed to fetch registrations. Please try again later.');\r\n                setRegistrations([]);\r\n            }\r\n        };\r\n\r\n        if (eventId) fetchRegistrations();\r\n    }, [eventId]);\r\n\r\n    const updateStatus = async (registrationId, newStatus) => {\r\n        try {\r\n            await axios.patch(`http://localhost:8080/api/registrations/${registrationId}/status?status=${newStatus}`);\r\n            setRegistrations(prevRegistrations =>\r\n                prevRegistrations.map(registration =>\r\n                    registration.registrationId === registrationId\r\n                        ? { ...registration, status: newStatus }\r\n                        : registration\r\n                )\r\n            );\r\n        } catch (error) {\r\n            console.error('Error updating registration status:', error);\r\n            setError('Failed to update status. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"registrations-container\">\r\n            <h2>Registrations for Event {eventId}</h2>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            <table className=\"registrations-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Registration ID</th>\r\n                        <th>Athlete ID</th>\r\n                        <th>Event ID</th>\r\n                        <th>Registration Date</th>\r\n                        <th>Status</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {registrations.map(registration => (\r\n                        <tr key={registration.registrationId}>\r\n                            <td>{registration.registrationId}</td>\r\n                            <td>{registration.athleteId}</td>\r\n                            <td>{registration.eventId}</td>\r\n                            <td>{new Date(registration.registrationDate).toLocaleDateString()}</td>\r\n                            <td className={`status-${registration.status.toLowerCase()}`}>\r\n                                {registration.status}\r\n                            </td>\r\n                            <td>\r\n                                {registration.status === 'pending' && (\r\n                                    <>\r\n                                        <button\r\n                                            className=\"accept-button\"\r\n                                            onClick={() => updateStatus(registration.registrationId, 'accepted')}\r\n                                        >\r\n                                            Accept\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"reject-button\"\r\n                                            onClick={() => updateStatus(registration.registrationId, 'rejected')}\r\n                                        >\r\n                                            Reject\r\n                                        </button>\r\n                                    </>\r\n                                )}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegistrationsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}