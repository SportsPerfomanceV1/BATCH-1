{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{Link,useNavigate}from'react-router-dom';import'./profile.css';import showPasswordIcon from'../image/show.png';import hidePasswordIcon from'../image/hide.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProfilePage=()=>{const[profileData,setProfileData]=useState({firstname:'',lastname:'',email:'',password:''});const[formData,setFormData]=useState({...profileData,newPassword:'',confirmPassword:''});const[showPassword,setShowPassword]=useState(false);const[registrations,setRegistrations]=useState([]);const[eventDetails,setEventDetails]=useState({});const[athleteId,setAthleteId]=useState('');const[error,setError]=useState('');const[message,setMessage]=useState('');const[showEditForm,setShowEditForm]=useState(false);const updatedData={};const navigate=useNavigate();useEffect(()=>{const loggedIn=sessionStorage.getItem('loggedIn')==='true';if(!loggedIn){navigate('/login');}else{const fetchProfileData=async()=>{const username=sessionStorage.getItem(\"username\");const userType=sessionStorage.getItem(\"userType\");if(!username||!userType){setError(\"User not logged in or userType missing.\");return;}try{const profileResponse=await axios.get(`http://localhost:8080/api/profile/${username}`,{params:{userType}});setProfileData(profileResponse.data);if(userType==='athlete'){const athleteResponse=await axios.get(`http://localhost:8080/api/athletes/${username}`);setAthleteId(athleteResponse.data.id);const registrationsResponse=await axios.get(`http://localhost:8080/api/registrations?athleteId=${athleteResponse.data.id}`);setRegistrations(registrationsResponse.data);// Fetch event details for each registration\nconst eventDetailsPromises=registrationsResponse.data.map(reg=>axios.get(`http://localhost:8080/api/events/${reg.eventId}`));const eventDetailsResponses=await Promise.all(eventDetailsPromises);const eventDetailsMap={};eventDetailsResponses.forEach((response,index)=>{eventDetailsMap[registrationsResponse.data[index].eventId]=response.data;});setEventDetails(eventDetailsMap);}}catch(error){console.error('Error fetching profile data:',error);setError(\"Failed to load profile details or registrations.\");}};fetchProfileData();}},[navigate]);const handleUpdateProfile=async e=>{const username=sessionStorage.getItem(\"username\");const userType=sessionStorage.getItem(\"userType\");if(!username||!userType){setError(\"User not logged in or userType missing.\");return;}try{const response=await axios.put(`http://localhost:8080/api/profile/update/${username}`,updatedData,{params:{userType}});if(response.status===200){setMessage(\"Profile updated successfully.\");setProfileData(prevData=>({...prevData,...updatedData}));setShowEditForm(false);}}catch(error){setError(\"Failed to update profile details.\");}};const EditProfileForm=_ref=>{let{profileData,onSubmit,onCancel}=_ref;const[formData,setFormData]=useState({...profileData,newPassword:'',confirmPassword:''});const[showPassword,setShowPassword]=useState(false);const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const togglePasswordVisibility=()=>{setShowPassword(!showPassword);};const handleSubmit=e=>{e.preventDefault();if(formData.newPassword!==formData.confirmPassword){alert(\"Passwords don't match\");return;}const updatedData={firstname:formData.firstname,lastname:formData.lastname,email:formData.email};if(formData.newPassword){updatedData.password=formData.newPassword;}onSubmit(updatedData);};return/*#__PURE__*/_jsx(\"div\",{className:\"edit-profile-form\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"firstname\",value:formData.firstname,onChange:handleChange,placeholder:\"First Name\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"lastname\",value:formData.lastname,onChange:handleChange,placeholder:\"Last Name\",required:true})]}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,placeholder:\"Email\",required:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-fields\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPassword?'text':'password',name:\"newPassword\",placeholder:\"New Password\",value:formData.newPassword,onChange:handleChange}),/*#__PURE__*/_jsx(\"img\",{src:showPassword?hidePasswordIcon:showPasswordIcon,alt:\"Toggle Password Visibility\",className:\"password-toggle-icon\",onClick:togglePasswordVisibility})]}),/*#__PURE__*/_jsx(\"input\",{type:showPassword?'text':'password',name:\"confirmPassword\",placeholder:\"Confirm Password\",value:formData.confirmPassword,onChange:handleChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Update Details\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onCancel,children:\"Cancel\"})]})]})});};return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-profile\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User Profile\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:message}),!error&&/*#__PURE__*/_jsxs(\"div\",{className:\"profile-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"First Name : \"}),profileData.firstname]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Last Name : \"}),profileData.lastname]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email : \"}),profileData.email]}),/*#__PURE__*/_jsx(\"button\",{className:\"edit-profile-btn\",onClick:()=>setShowEditForm(true),children:\"Edit Profile\"})]}),showEditForm&&/*#__PURE__*/_jsx(EditProfileForm,{profileData:profileData,onSubmit:handleUpdateProfile,onCancel:()=>setShowEditForm(false)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"user-registrations\",children:registrations.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-registrations\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Registrations\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Organizer\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Location\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:registrations.map(reg=>{const event=eventDetails[reg.eventId]||{};return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:event.title||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:event.organizer||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:event.date||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:event.time||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:event.location||'N/A'}),/*#__PURE__*/_jsx(\"span\",{className:`status-box ${reg.status.toLowerCase()}`,children:reg.status||'N/A'})]},reg.id);})})]})]})})]});};export default ProfilePage;","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useNavigate","showPasswordIcon","hidePasswordIcon","jsx","_jsx","jsxs","_jsxs","ProfilePage","profileData","setProfileData","firstname","lastname","email","password","formData","setFormData","newPassword","confirmPassword","showPassword","setShowPassword","registrations","setRegistrations","eventDetails","setEventDetails","athleteId","setAthleteId","error","setError","message","setMessage","showEditForm","setShowEditForm","updatedData","navigate","loggedIn","sessionStorage","getItem","fetchProfileData","username","userType","profileResponse","get","params","data","athleteResponse","id","registrationsResponse","eventDetailsPromises","map","reg","eventId","eventDetailsResponses","Promise","all","eventDetailsMap","forEach","response","index","console","handleUpdateProfile","e","put","status","prevData","EditProfileForm","_ref","onSubmit","onCancel","handleChange","target","name","value","togglePasswordVisibility","handleSubmit","preventDefault","alert","className","children","type","onChange","placeholder","required","src","alt","onClick","length","event","title","organizer","date","time","location","toLowerCase"],"sources":["C:/Users/vishw/Documents/Infosys Internship Project/BATCH-1/BATCH-1_main2 - Copy/Frontend/src/components/profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './profile.css';\r\nimport showPasswordIcon from '../image/show.png';\r\nimport hidePasswordIcon from '../image/hide.png';\r\n\r\nconst ProfilePage = () => {\r\n    const [profileData, setProfileData] = useState({ firstname: '', lastname: '', email: '', password: '' });\r\n    const [formData, setFormData] = useState({ ...profileData, newPassword: '', confirmPassword: '' });\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [registrations, setRegistrations] = useState([]);\r\n    const [eventDetails, setEventDetails] = useState({});\r\n    const [athleteId, setAthleteId] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [showEditForm, setShowEditForm] = useState(false);\r\n    const updatedData = ({});\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const loggedIn = sessionStorage.getItem('loggedIn') === 'true';\r\n\r\n        if (!loggedIn) {\r\n            navigate('/login');\r\n        } else {\r\n            const fetchProfileData = async () => {\r\n                const username = sessionStorage.getItem(\"username\");\r\n                const userType = sessionStorage.getItem(\"userType\");\r\n            \r\n                if (!username || !userType) {\r\n                    setError(\"User not logged in or userType missing.\");\r\n                    return;\r\n                }\r\n            \r\n                try {\r\n                    const profileResponse = await axios.get(`http://localhost:8080/api/profile/${username}`, {\r\n                        params: { userType }\r\n                    });\r\n                    setProfileData(profileResponse.data);\r\n            \r\n                    if (userType === 'athlete') {\r\n                        const athleteResponse = await axios.get(`http://localhost:8080/api/athletes/${username}`);\r\n                        setAthleteId(athleteResponse.data.id);\r\n            \r\n                        const registrationsResponse = await axios.get(`http://localhost:8080/api/registrations?athleteId=${athleteResponse.data.id}`);\r\n                        setRegistrations(registrationsResponse.data);\r\n            \r\n                        // Fetch event details for each registration\r\n                        const eventDetailsPromises = registrationsResponse.data.map(reg => \r\n                            axios.get(`http://localhost:8080/api/events/${reg.eventId}`)\r\n                        );\r\n                        const eventDetailsResponses = await Promise.all(eventDetailsPromises);\r\n                        const eventDetailsMap = {};\r\n                        eventDetailsResponses.forEach((response, index) => {\r\n                            eventDetailsMap[registrationsResponse.data[index].eventId] = response.data;\r\n                        });\r\n                        setEventDetails(eventDetailsMap);\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error fetching profile data:', error);\r\n                    setError(\"Failed to load profile details or registrations.\");\r\n                }\r\n            };\r\n            fetchProfileData();\r\n        }\r\n    }, [navigate]);\r\n\r\n    const handleUpdateProfile = async (e) => {\r\n        const username = sessionStorage.getItem(\"username\");\r\n        const userType = sessionStorage.getItem(\"userType\");\r\n\r\n        if (!username || !userType) {\r\n            setError(\"User not logged in or userType missing.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.put(`http://localhost:8080/api/profile/update/${username}`, updatedData, {\r\n                params: { userType }\r\n            });\r\n            if (response.status === 200) {\r\n                setMessage(\"Profile updated successfully.\");\r\n                setProfileData(prevData => ({...prevData, ...updatedData}));\r\n                setShowEditForm(false);\r\n            }\r\n        } catch (error) {\r\n            setError(\"Failed to update profile details.\");\r\n        }\r\n    };\r\n\r\n    const EditProfileForm = ({ profileData, onSubmit, onCancel }) => {\r\n        const [formData, setFormData] = useState({ ...profileData, newPassword: '', confirmPassword: '' });\r\n        const [showPassword, setShowPassword] = useState(false);\r\n    \r\n        const handleChange = (e) => {\r\n            setFormData({ ...formData, [e.target.name]: e.target.value });\r\n        };\r\n    \r\n        const togglePasswordVisibility = () => {\r\n            setShowPassword(!showPassword);\r\n        };\r\n    \r\n        const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            if (formData.newPassword !== formData.confirmPassword) {\r\n                alert(\"Passwords don't match\");\r\n                return;\r\n            }\r\n            const updatedData = {\r\n                firstname: formData.firstname,\r\n                lastname: formData.lastname,\r\n                email: formData.email\r\n            };\r\n            if (formData.newPassword) {\r\n                updatedData.password = formData.newPassword;\r\n            }\r\n            onSubmit(updatedData);\r\n        };\r\n    \r\n        return (\r\n            <div className=\"edit-profile-form\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-row\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"firstname\"\r\n                            value={formData.firstname}\r\n                            onChange={handleChange}\r\n                            placeholder=\"First Name\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"lastname\"\r\n                            value={formData.lastname}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Last Name\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Email\"\r\n                        required\r\n                    />\r\n                    <div className=\"password-fields\">\r\n                        <input\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            name=\"newPassword\"\r\n                            placeholder=\"New Password\"\r\n                            value={formData.newPassword}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <img\r\n                            src={showPassword ? hidePasswordIcon : showPasswordIcon}\r\n                            alt=\"Toggle Password Visibility\"\r\n                            className=\"password-toggle-icon\"\r\n                            onClick={togglePasswordVisibility}\r\n                        />\r\n                    </div>\r\n                    <input\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        name=\"confirmPassword\"\r\n                        placeholder=\"Confirm Password\"\r\n                        value={formData.confirmPassword}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <div className=\"form-actions\">\r\n                        <button type=\"submit\">Update Details</button>\r\n                        <button type=\"button\" onClick={onCancel}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile-container\">\r\n            <div className='user-profile'>\r\n                <h2>User Profile</h2>\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n                {message && <p className=\"success-message\">{message}</p>}\r\n                {!error && (\r\n                    <div className=\"profile-details\">\r\n                        <p><strong>First Name : </strong>{profileData.firstname}</p>\r\n                        <p><strong>Last Name : </strong>{profileData.lastname}</p>\r\n                        <p><strong>Email : </strong>{profileData.email}</p>\r\n                        <button \r\n                            className=\"edit-profile-btn\"\r\n                            onClick={ () => setShowEditForm(true) }\r\n                        >Edit Profile</button>\r\n                    </div>\r\n                )}\r\n                {showEditForm && (\r\n                    <EditProfileForm\r\n                        profileData={profileData}\r\n                        onSubmit={handleUpdateProfile}\r\n                        onCancel={() => setShowEditForm(false)}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className='user-registrations'>\r\n                {registrations.length > 0 && (\r\n                    <div className=\"user-registrations\">\r\n                        <h2>Your Registrations</h2>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Title</th>\r\n                                    <th>Organizer</th>\r\n                                    <th>Date</th>\r\n                                    <th>Time</th>\r\n                                    <th>Location</th>\r\n                                    <th>Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {registrations.map((reg) => {\r\n                                    const event = eventDetails[reg.eventId] || {};\r\n                                    return (\r\n                                        <tr key={reg.id}>\r\n                                            <td>{event.title || 'N/A'}</td>\r\n                                            <td>{event.organizer || 'N/A'}</td>\r\n                                            <td>{event.date || 'N/A'}</td>\r\n                                            <td>{event.time || 'N/A'}</td>\r\n                                            <td>{event.location || 'N/A'}</td>\r\n                                            <span className={`status-box ${reg.status.toLowerCase()}`}>\r\n                                                {reg.status || 'N/A'}\r\n                                            </span>\r\n                                        </tr>\r\n                                    );\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}