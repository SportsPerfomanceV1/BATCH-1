{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\Documents\\\\Infosys Internship Project\\\\BATCH-1\\\\BATCH-1_main2 - Copy\\\\Frontend\\\\src\\\\components\\\\signup.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import PasswordStrengthMeter from './PasswordStrengthMeter';\n// import './signup.css'; // Make sure you have appropriate styles\n// import showPasswordIcon from '../image/show.png';\n// import hidePasswordIcon from '../image/hide.png';\n//\n// const SignupPage = () => {\n//     const [formData, setFormData] = useState({\n//         firstname: '',\n//         lastname: '',\n//         middlename: '', // Optional field\n//         username: '',\n//         email: '',\n//         password: '',\n//         confirmPassword: '', // Added confirmPassword state\n//         userType: 'athlete' // Default user type\n//     });\n//\n//     const [showPassword, setShowPassword] = useState(false); // State to manage password visibility\n//     const [error, setError] = useState(''); // For error messages\n//     const [message, setMessage] = useState(''); // For success messages\n//\n//     // Handle input changes\n//     const handleChange = (e) => {\n//         setFormData({\n//             ...formData,\n//             [e.target.name]: e.target.value\n//         });\n//     };\n//\n//     // Toggle password visibility\n//     const togglePasswordVisibility = () => {\n//         setShowPassword(!showPassword);\n//     };\n//\n//     // Handle form submission\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         // Ensure passwords match\n//         if (formData.password !== formData.confirmPassword) {\n//             setError('Passwords do not match');\n//             return;\n//         }\n//         try {\n//             // Clear previous messages\n//             setError('');\n//             setMessage('');\n//\n//             // Make a POST request to the backend signup endpoint\n//             const response = await axios.post('http://localhost:8080/api/signup', formData);\n//\n//             // Handle success\n//             setMessage(response.data); // Backend returns success message\n//         } catch (error) {\n//             // Handle error\n//             if (error.response && error.response.data) {\n//                 setError(error.response.data); // Backend returns error message\n//             } else {\n//                 setError('Signup failed. Please try again.');\n//             }\n//         }\n//     };\n//\n//     return (\n//         <div className=\"signup-container\">\n//             <h2>Sign Up</h2>\n//             <form onSubmit={handleSubmit} className=\"signup-form\">\n//                 <div className=\"form-group\">\n//                     <label>First Name:</label>\n//                     <input\n//                         type=\"text\"\n//                         name=\"firstname\"\n//                         value={formData.firstname}\n//                         onChange={handleChange}\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label>Last Name:</label>\n//                     <input\n//                         type=\"text\"\n//                         name=\"lastname\"\n//                         value={formData.lastname}\n//                         onChange={handleChange}\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label>Middle Name (optional):</label>\n//                     <input\n//                         type=\"text\"\n//                         name=\"middlename\"\n//                         value={formData.middlename}\n//                         onChange={handleChange}\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label>Username:</label>\n//                     <input\n//                         type=\"text\"\n//                         name=\"username\"\n//                         value={formData.username}\n//                         onChange={handleChange}\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label>Email:</label>\n//                     <input\n//                         type=\"email\"\n//                         name=\"email\"\n//                         value={formData.email}\n//                         onChange={handleChange}\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label>Password:</label>\n//                     <input\n//                         type={showPassword ? 'text' : 'password'}\n//                         name=\"password\"\n//                         value={formData.password}\n//                         onChange={handleChange}\n//                         required\n//                     />\n//                     <img\n//                         src={showPassword ? hidePasswordIcon : showPasswordIcon}\n//                         alt=\"Toggle Password Visibility\"\n//                         className=\"password-toggle-icon\"\n//                         onClick={togglePasswordVisibility}\n//                     />\n//                 </div>\n//                 <small>Min 5 alphabets and Min 3 numbers are required*</small>\n//                 <PasswordStrengthMeter password={formData.password} />\n//\n//                 <div className=\"form-group\">\n//                     <label>Confirm Password:</label>\n//                     <input\n//                         type={showPassword ? 'text' : 'password'}\n//                         name=\"confirmPassword\"\n//                         value={formData.confirmPassword}\n//                         onChange={handleChange}\n//                         required\n//                     />\n//                 </div>\n//\n//                 <div className=\"form-group\">\n//                     <label>User Type:</label>\n//                     <select name=\"userType\" value={formData.userType} onChange={handleChange}>\n//                         <option value=\"athlete\">Athlete</option>\n//                         <option value=\"coach\">Coach</option>\n//                     </select>\n//                 </div>\n//                 <button type=\"submit\" className=\"signup-button\">Sign Up</button>\n//\n//                 {/* Display success or error message below the button */}\n//                 {message && <p className=\"success-message\">{message}</p>}\n//                 {error && <p className=\"error-message\">{error}</p>}\n//             </form>\n//         </div>\n//     );\n// };\n//\n// export default SignupPage;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport PasswordStrengthMeter from './PasswordStrengthMeter';\nimport './login-signup.css';\nimport showPasswordIcon from '../image/show.png';\nimport hidePasswordIcon from '../image/hide.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    firstname: '',\n    lastname: '',\n    //        middlename: '', // Optional field\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    // Added confirmPassword state\n    userType: 'athlete' // Default user type\n  });\n  const [showPassword, setShowPassword] = useState(false); // State to manage password visibility\n  const [error, setError] = useState(''); // For error messages\n  const [message, setMessage] = useState(''); // For success messages\n\n  // Handle input changes\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Toggle password visibility\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Ensure passwords match\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      // Clear previous messages\n      setError('');\n      setMessage('');\n\n      // Make a POST request to the backend signup endpoint\n      const response = await axios.post('http://localhost:8080/api/signup', formData);\n\n      // Handle success\n      setMessage(response.data); // Backend returns success message\n    } catch (error) {\n      // Handle error\n      if (error.response && error.response.data) {\n        setError(error.response.data); // Backend returns error message\n      } else {\n        setError('Signup failed. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"signup-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstname\",\n          placeholder: \"First Name:*\",\n          value: formData.firstname,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastname\",\n          placeholder: \"Last Name:*\",\n          value: formData.lastname,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username:*\",\n        value: formData.username,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email:*\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? 'text' : 'password',\n          name: \"password\",\n          placeholder: \"Password:*\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: showPassword ? hidePasswordIcon : showPasswordIcon,\n          alt: \"Toggle Password Visibility\",\n          className: \"password-toggle-icon\",\n          onClick: togglePasswordVisibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Min 5 alphabets and Min 3 numbers are required*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PasswordStrengthMeter, {\n        password: formData.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: showPassword ? 'text' : 'password',\n        name: \"confirmPassword\",\n        placeholder: \"Confirm Password:*\",\n        value: formData.confirmPassword,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"userType\",\n        value: formData.userType,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"athlete\",\n          children: \"Athlete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"coach\",\n          children: \"Coach\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"signup-button\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 9\n  }, this);\n};\n_s(SignupPage, \"ZbVxTOgf9ONBR2sqUVg79rBhPLM=\");\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","axios","PasswordStrengthMeter","showPasswordIcon","hidePasswordIcon","jsxDEV","_jsxDEV","SignupPage","_s","formData","setFormData","firstname","lastname","username","email","password","confirmPassword","userType","showPassword","setShowPassword","error","setError","message","setMessage","handleChange","e","target","name","value","togglePasswordVisibility","handleSubmit","preventDefault","response","post","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","src","alt","onClick","Link","to","_c","$RefreshReg$"],"sources":["C:/Users/vishw/Documents/Infosys Internship Project/BATCH-1/BATCH-1_main2 - Copy/Frontend/src/components/signup.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import PasswordStrengthMeter from './PasswordStrengthMeter';\r\n// import './signup.css'; // Make sure you have appropriate styles\r\n// import showPasswordIcon from '../image/show.png';\r\n// import hidePasswordIcon from '../image/hide.png';\r\n//\r\n// const SignupPage = () => {\r\n//     const [formData, setFormData] = useState({\r\n//         firstname: '',\r\n//         lastname: '',\r\n//         middlename: '', // Optional field\r\n//         username: '',\r\n//         email: '',\r\n//         password: '',\r\n//         confirmPassword: '', // Added confirmPassword state\r\n//         userType: 'athlete' // Default user type\r\n//     });\r\n//\r\n//     const [showPassword, setShowPassword] = useState(false); // State to manage password visibility\r\n//     const [error, setError] = useState(''); // For error messages\r\n//     const [message, setMessage] = useState(''); // For success messages\r\n//\r\n//     // Handle input changes\r\n//     const handleChange = (e) => {\r\n//         setFormData({\r\n//             ...formData,\r\n//             [e.target.name]: e.target.value\r\n//         });\r\n//     };\r\n//\r\n//     // Toggle password visibility\r\n//     const togglePasswordVisibility = () => {\r\n//         setShowPassword(!showPassword);\r\n//     };\r\n//\r\n//     // Handle form submission\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         // Ensure passwords match\r\n//         if (formData.password !== formData.confirmPassword) {\r\n//             setError('Passwords do not match');\r\n//             return;\r\n//         }\r\n//         try {\r\n//             // Clear previous messages\r\n//             setError('');\r\n//             setMessage('');\r\n//\r\n//             // Make a POST request to the backend signup endpoint\r\n//             const response = await axios.post('http://localhost:8080/api/signup', formData);\r\n//\r\n//             // Handle success\r\n//             setMessage(response.data); // Backend returns success message\r\n//         } catch (error) {\r\n//             // Handle error\r\n//             if (error.response && error.response.data) {\r\n//                 setError(error.response.data); // Backend returns error message\r\n//             } else {\r\n//                 setError('Signup failed. Please try again.');\r\n//             }\r\n//         }\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"signup-container\">\r\n//             <h2>Sign Up</h2>\r\n//             <form onSubmit={handleSubmit} className=\"signup-form\">\r\n//                 <div className=\"form-group\">\r\n//                     <label>First Name:</label>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         name=\"firstname\"\r\n//                         value={formData.firstname}\r\n//                         onChange={handleChange}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label>Last Name:</label>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         name=\"lastname\"\r\n//                         value={formData.lastname}\r\n//                         onChange={handleChange}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label>Middle Name (optional):</label>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         name=\"middlename\"\r\n//                         value={formData.middlename}\r\n//                         onChange={handleChange}\r\n//                     />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label>Username:</label>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         name=\"username\"\r\n//                         value={formData.username}\r\n//                         onChange={handleChange}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label>Email:</label>\r\n//                     <input\r\n//                         type=\"email\"\r\n//                         name=\"email\"\r\n//                         value={formData.email}\r\n//                         onChange={handleChange}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label>Password:</label>\r\n//                     <input\r\n//                         type={showPassword ? 'text' : 'password'}\r\n//                         name=\"password\"\r\n//                         value={formData.password}\r\n//                         onChange={handleChange}\r\n//                         required\r\n//                     />\r\n//                     <img\r\n//                         src={showPassword ? hidePasswordIcon : showPasswordIcon}\r\n//                         alt=\"Toggle Password Visibility\"\r\n//                         className=\"password-toggle-icon\"\r\n//                         onClick={togglePasswordVisibility}\r\n//                     />\r\n//                 </div>\r\n//                 <small>Min 5 alphabets and Min 3 numbers are required*</small>\r\n//                 <PasswordStrengthMeter password={formData.password} />\r\n//\r\n//                 <div className=\"form-group\">\r\n//                     <label>Confirm Password:</label>\r\n//                     <input\r\n//                         type={showPassword ? 'text' : 'password'}\r\n//                         name=\"confirmPassword\"\r\n//                         value={formData.confirmPassword}\r\n//                         onChange={handleChange}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//\r\n//                 <div className=\"form-group\">\r\n//                     <label>User Type:</label>\r\n//                     <select name=\"userType\" value={formData.userType} onChange={handleChange}>\r\n//                         <option value=\"athlete\">Athlete</option>\r\n//                         <option value=\"coach\">Coach</option>\r\n//                     </select>\r\n//                 </div>\r\n//                 <button type=\"submit\" className=\"signup-button\">Sign Up</button>\r\n//\r\n//                 {/* Display success or error message below the button */}\r\n//                 {message && <p className=\"success-message\">{message}</p>}\r\n//                 {error && <p className=\"error-message\">{error}</p>}\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// export default SignupPage;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport PasswordStrengthMeter from './PasswordStrengthMeter';\r\nimport './login-signup.css';\r\nimport showPasswordIcon from '../image/show.png';\r\nimport hidePasswordIcon from '../image/hide.png';\r\n\r\nconst SignupPage = () => {\r\n    const [formData, setFormData] = useState({\r\n        firstname: '',\r\n        lastname: '',\r\n//        middlename: '', // Optional field\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '', // Added confirmPassword state\r\n        userType: 'athlete' // Default user type\r\n    });\r\n\r\n    const [showPassword, setShowPassword] = useState(false); // State to manage password visibility\r\n    const [error, setError] = useState(''); // For error messages\r\n    const [message, setMessage] = useState(''); // For success messages\r\n\r\n    // Handle input changes\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    // Toggle password visibility\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // Ensure passwords match\r\n        if (formData.password !== formData.confirmPassword) {\r\n            setError('Passwords do not match');\r\n            return;\r\n        }\r\n        try {\r\n            // Clear previous messages\r\n            setError('');\r\n            setMessage('');\r\n\r\n            // Make a POST request to the backend signup endpoint\r\n            const response = await axios.post('http://localhost:8080/api/signup', formData);\r\n\r\n            // Handle success\r\n            setMessage(response.data); // Backend returns success message\r\n        } catch (error) {\r\n            // Handle error\r\n            if (error.response && error.response.data) {\r\n                setError(error.response.data); // Backend returns error message\r\n            } else {\r\n                setError('Signup failed. Please try again.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"signup-container\">\r\n            <h2>Sign Up</h2>\r\n            <form className=\"signup-form\" onSubmit={handleSubmit}>\r\n                <div className='name-fields'>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"First Name:*\"\r\n                        value={formData.firstname}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"lastname\"\r\n                        placeholder=\"Last Name:*\"\r\n                        value={formData.lastname}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Username:*\"\r\n                    value={formData.username}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email:*\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <div className=\"password-fields\">\r\n                    <input\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        name=\"password\"\r\n                        placeholder=\"Password:*\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <img\r\n                        src={showPassword ? hidePasswordIcon : showPasswordIcon}\r\n                        alt=\"Toggle Password Visibility\"\r\n                        className=\"password-toggle-icon\"\r\n                        onClick={togglePasswordVisibility}\r\n                    />\r\n                </div>\r\n                <small>Min 5 alphabets and Min 3 numbers are required*</small>\r\n                <PasswordStrengthMeter password={formData.password} />\r\n                <input\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    name=\"confirmPassword\"\r\n                    placeholder=\"Confirm Password:*\"\r\n                    value={formData.confirmPassword}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <select name=\"userType\" value={formData.userType} onChange={handleChange}>\r\n                    <option value=\"athlete\">Athlete</option>\r\n                    <option value=\"coach\">Coach</option>\r\n                    <option value=\"admin\">Admin</option>\r\n                </select>\r\n                <button type=\"submit\" className=\"signup-button\">Sign Up</button>\r\n\r\n                {/* Display success or error message below the button */}\r\n                {message && <p className=\"success-message\">{message}</p>}\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n                <p>\r\n                    Already have an account? <Link to=\"/login\">Login here</Link>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupPage;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}