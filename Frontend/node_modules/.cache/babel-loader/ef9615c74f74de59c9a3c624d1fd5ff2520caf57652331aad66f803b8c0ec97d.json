{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishw\\\\Documents\\\\Infosys Internship Project\\\\BATCH-1\\\\BATCH-1_main2 - Copy\\\\Frontend\\\\src\\\\components\\\\profile.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './profile.css';\nimport showPasswordIcon from '../image/show.png';\nimport hidePasswordIcon from '../image/hide.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [profileData, setProfileData] = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: ''\n  });\n  const [registrations, setRegistrations] = useState([]);\n  const [eventDetails, setEventDetails] = useState({});\n  const [athleteId, setAthleteId] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  useEffect(() => {\n    const loggedIn = sessionStorage.getItem('loggedIn') === 'true';\n    if (!loggedIn) {\n      navigate('/login');\n    } else {\n      const fetchProfileData = async () => {\n        const username = sessionStorage.getItem(\"username\");\n        const userType = sessionStorage.getItem(\"userType\");\n        if (!username || !userType) {\n          setError(\"User not logged in or userType missing.\");\n          return;\n        }\n        try {\n          const profileResponse = await axios.get(`http://localhost:8080/api/profile/${username}`, {\n            params: {\n              userType\n            }\n          });\n          setProfileData(profileResponse.data);\n          if (userType === 'athlete') {\n            const athleteResponse = await axios.get(`http://localhost:8080/api/athletes/${username}`);\n            setAthleteId(athleteResponse.data.id);\n            const registrationsResponse = await axios.get(`http://localhost:8080/api/registrations?athleteId=${athleteResponse.data.id}`);\n            setRegistrations(registrationsResponse.data);\n\n            // Fetch event details for each registration\n            const eventDetailsPromises = registrationsResponse.data.map(reg => axios.get(`http://localhost:8080/api/events/${reg.eventId}`));\n            const eventDetailsResponses = await Promise.all(eventDetailsPromises);\n            const eventDetailsMap = {};\n            eventDetailsResponses.forEach((response, index) => {\n              eventDetailsMap[registrationsResponse.data[index].eventId] = response.data;\n            });\n            setEventDetails(eventDetailsMap);\n          }\n        } catch (error) {\n          console.error('Error fetching profile data:', error);\n          setError(\"Failed to load profile details or registrations.\");\n        }\n      };\n      fetchProfileData();\n    }\n  }, [navigate]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProfileData({\n      ...profileData,\n      [name]: value\n    });\n  };\n  const handleUpdateProfile = async e => {\n    e.preventDefault();\n    const username = sessionStorage.getItem(\"username\");\n    const userType = sessionStorage.getItem(\"userType\");\n    if (!username || !userType) {\n      setError(\"User not logged in or userType missing.\");\n      return;\n    }\n    try {\n      const response = await axios.put(`http://localhost:8080/api/profile/update/${username}`, profileData, {\n        params: {\n          userType\n        }\n      });\n      if (response.status === 200) {\n        setMessage(\"Profile updated successfully.\");\n      }\n    } catch (error) {\n      setError(\"Failed to update profile details.\");\n    }\n  };\n  const EditProfileForm = ({\n    profileData,\n    onSubmit,\n    onCancel\n  }) => {\n    _s();\n    const [formData, setFormData] = useState({\n      ...profileData,\n      newPassword: '',\n      confirmPassword: ''\n    });\n    const [showPassword, setShowPassword] = useState(false);\n    const handleChange = e => {\n      setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n      });\n    };\n    const togglePasswordVisibility = () => {\n      setShowPassword(!showPassword);\n    };\n    const handleSubmit = e => {\n      e.preventDefault();\n      if (formData.newPassword !== formData.confirmPassword) {\n        alert(\"Passwords don't match\");\n        return;\n      }\n      onSubmit(formData);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-profile-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"firstname\",\n            value: formData.firstname,\n            onChange: handleChange,\n            placeholder: \"First Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lastname\",\n            value: formData.lastname,\n            onChange: handleChange,\n            placeholder: \"Last Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? 'text' : 'password',\n            name: \"newPassword\",\n            placeholder: \"New Password\",\n            value: formData.newPassword,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: showPassword ? hidePasswordIcon : showPasswordIcon,\n            alt: \"Toggle Password Visibility\",\n            className: \"password-toggle-icon\",\n            onClick: togglePasswordVisibility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          placeholder: \"Confirm Password\",\n          value: formData.confirmPassword,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Update Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  };\n  _s(EditProfileForm, \"OzwxTqhaXAKLHjCp3gmUFG5fqSM=\");\n  const getStatusColor = status => {\n    switch (status.toLowerCase()) {\n      case 'pending':\n        return 'yellow';\n      case 'accepted':\n        return 'green';\n      case 'rejected':\n        return 'red';\n      default:\n        return 'black';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 27\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }, this), !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 28\n          }, this), profileData.firstname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 28\n          }, this), profileData.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 28\n          }, this), profileData.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-profile-btn\",\n          onClick: () => setShowEditForm(true),\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-registrations\",\n      children: registrations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-registrations\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Registrations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Organizer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: registrations.map(reg => {\n              const event = eventDetails[reg.eventId] || {};\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: event.title || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: event.organizer || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: event.date || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: event.time || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: event.location || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status-box ${reg.status.toLowerCase()}`,\n                  children: reg.status || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 45\n                }, this)]\n              }, reg.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n};\n_s2(ProfilePage, \"eTX4SU3QuArGdMRednH4CKhkptA=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useNavigate","showPasswordIcon","hidePasswordIcon","jsxDEV","_jsxDEV","ProfilePage","_s2","_s","$RefreshSig$","profileData","setProfileData","firstname","lastname","email","password","registrations","setRegistrations","eventDetails","setEventDetails","athleteId","setAthleteId","error","setError","message","setMessage","showEditForm","setShowEditForm","showPassword","setShowPassword","navigate","togglePasswordVisibility","loggedIn","sessionStorage","getItem","fetchProfileData","username","userType","profileResponse","get","params","data","athleteResponse","id","registrationsResponse","eventDetailsPromises","map","reg","eventId","eventDetailsResponses","Promise","all","eventDetailsMap","forEach","response","index","console","handleInputChange","e","name","value","target","handleUpdateProfile","preventDefault","put","status","EditProfileForm","onSubmit","onCancel","formData","setFormData","newPassword","confirmPassword","handleChange","handleSubmit","alert","className","children","type","onChange","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","getStatusColor","toLowerCase","length","event","title","organizer","date","time","location","_c","$RefreshReg$"],"sources":["C:/Users/vishw/Documents/Infosys Internship Project/BATCH-1/BATCH-1_main2 - Copy/Frontend/src/components/profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './profile.css';\r\nimport showPasswordIcon from '../image/show.png';\r\nimport hidePasswordIcon from '../image/hide.png';\r\n\r\nconst ProfilePage = () => {\r\n    const [profileData, setProfileData] = useState({ firstname: '', lastname: '', email: '', password: '' });\r\n    const [registrations, setRegistrations] = useState([]);\r\n    const [eventDetails, setEventDetails] = useState({});\r\n    const [athleteId, setAthleteId] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [showEditForm, setShowEditForm] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const loggedIn = sessionStorage.getItem('loggedIn') === 'true';\r\n\r\n        if (!loggedIn) {\r\n            navigate('/login');\r\n        } else {\r\n            const fetchProfileData = async () => {\r\n                const username = sessionStorage.getItem(\"username\");\r\n                const userType = sessionStorage.getItem(\"userType\");\r\n            \r\n                if (!username || !userType) {\r\n                    setError(\"User not logged in or userType missing.\");\r\n                    return;\r\n                }\r\n            \r\n                try {\r\n                    const profileResponse = await axios.get(`http://localhost:8080/api/profile/${username}`, {\r\n                        params: { userType }\r\n                    });\r\n                    setProfileData(profileResponse.data);\r\n            \r\n                    if (userType === 'athlete') {\r\n                        const athleteResponse = await axios.get(`http://localhost:8080/api/athletes/${username}`);\r\n                        setAthleteId(athleteResponse.data.id);\r\n            \r\n                        const registrationsResponse = await axios.get(`http://localhost:8080/api/registrations?athleteId=${athleteResponse.data.id}`);\r\n                        setRegistrations(registrationsResponse.data);\r\n            \r\n                        // Fetch event details for each registration\r\n                        const eventDetailsPromises = registrationsResponse.data.map(reg => \r\n                            axios.get(`http://localhost:8080/api/events/${reg.eventId}`)\r\n                        );\r\n                        const eventDetailsResponses = await Promise.all(eventDetailsPromises);\r\n                        const eventDetailsMap = {};\r\n                        eventDetailsResponses.forEach((response, index) => {\r\n                            eventDetailsMap[registrationsResponse.data[index].eventId] = response.data;\r\n                        });\r\n                        setEventDetails(eventDetailsMap);\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error fetching profile data:', error);\r\n                    setError(\"Failed to load profile details or registrations.\");\r\n                }\r\n            };\r\n            fetchProfileData();\r\n        }\r\n    }, [navigate]);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setProfileData({\r\n            ...profileData,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleUpdateProfile = async (e) => {\r\n        e.preventDefault();\r\n        const username = sessionStorage.getItem(\"username\");\r\n        const userType = sessionStorage.getItem(\"userType\");\r\n\r\n        if (!username || !userType) {\r\n            setError(\"User not logged in or userType missing.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.put(`http://localhost:8080/api/profile/update/${username}`, profileData, {\r\n                params: { userType }\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                setMessage(\"Profile updated successfully.\");\r\n            }\r\n        } catch (error) {\r\n            setError(\"Failed to update profile details.\");\r\n        }\r\n    };\r\n\r\n    const EditProfileForm = ({ profileData, onSubmit, onCancel }) => {\r\n        const [formData, setFormData] = useState({ ...profileData, newPassword: '', confirmPassword: '' });\r\n        const [showPassword, setShowPassword] = useState(false);\r\n    \r\n        const handleChange = (e) => {\r\n            setFormData({ ...formData, [e.target.name]: e.target.value });\r\n        };\r\n    \r\n        const togglePasswordVisibility = () => {\r\n            setShowPassword(!showPassword);\r\n        };\r\n    \r\n        const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            if (formData.newPassword !== formData.confirmPassword) {\r\n                alert(\"Passwords don't match\");\r\n                return;\r\n            }\r\n            onSubmit(formData);\r\n        };\r\n    \r\n        return (\r\n            <div className=\"edit-profile-form\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-row\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"firstname\"\r\n                            value={formData.firstname}\r\n                            onChange={handleChange}\r\n                            placeholder=\"First Name\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"lastname\"\r\n                            value={formData.lastname}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Last Name\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Email\"\r\n                        required\r\n                    />\r\n                    <div className=\"password-fields\">\r\n                        <input\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            name=\"newPassword\"\r\n                            placeholder=\"New Password\"\r\n                            value={formData.newPassword}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <img\r\n                            src={showPassword ? hidePasswordIcon : showPasswordIcon}\r\n                            alt=\"Toggle Password Visibility\"\r\n                            className=\"password-toggle-icon\"\r\n                            onClick={togglePasswordVisibility}\r\n                        />\r\n                    </div>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        placeholder=\"Confirm Password\"\r\n                        value={formData.confirmPassword}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <div className=\"form-actions\">\r\n                        <button type=\"submit\">Update Details</button>\r\n                        <button type=\"button\" onClick={onCancel}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const getStatusColor = (status) => {\r\n        switch (status.toLowerCase()) {\r\n            case 'pending': return 'yellow';\r\n            case 'accepted': return 'green';\r\n            case 'rejected': return 'red';\r\n            default: return 'black';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile-container\">\r\n            <div className='user-profile'>\r\n                <h2>User Profile</h2>\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n                {message && <p className=\"success-message\">{message}</p>}\r\n                {!error && (\r\n                    <div className=\"profile-details\">\r\n                        <p><strong>First Name:</strong>{profileData.firstname}</p>\r\n                        <p><strong>Last Name:</strong>{profileData.lastname}</p>\r\n                        <p><strong>Email:</strong>{profileData.email}</p>\r\n                        <button \r\n                            className=\"edit-profile-btn\"\r\n                            onClick={ () => setShowEditForm(true) }\r\n                        >Edit Profile</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className='user-registrations'>\r\n                {registrations.length > 0 && (\r\n                    <div className=\"user-registrations\">\r\n                        <h2>Your Registrations</h2>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Title</th>\r\n                                    <th>Organizer</th>\r\n                                    <th>Date</th>\r\n                                    <th>Time</th>\r\n                                    <th>Location</th>\r\n                                    <th>Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {registrations.map((reg) => {\r\n                                    const event = eventDetails[reg.eventId] || {};\r\n                                    return (\r\n                                        <tr key={reg.id}>\r\n                                            <td>{event.title || 'N/A'}</td>\r\n                                            <td>{event.organizer || 'N/A'}</td>\r\n                                            <td>{event.date || 'N/A'}</td>\r\n                                            <td>{event.time || 'N/A'}</td>\r\n                                            <td>{event.location || 'N/A'}</td>\r\n                                            <span className={`status-box ${reg.status.toLowerCase()}`}>\r\n                                                {reg.status || 'N/A'}\r\n                                            </span>\r\n                                        </tr>\r\n                                    );\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}