{"ast":null,"code":"var _jsxFileName = \"D:\\\\infy\\\\ass3\\\\BATCH-1\\\\Frontend\\\\src\\\\components\\\\EventPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './events.css'; // Import the CSS\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [events, setEvents] = useState([]); // For storing events\n  const [error, setError] = useState(''); // For error messages\n  const [message, setMessage] = useState(''); // For success messages\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        // Clear previous messages\n        setError('');\n        setMessage('');\n\n        // Make a GET request to the backend events endpoint\n        const response = await axios.get('http://localhost:8080/api/events');\n        setEvents(response.data); // Assuming response.data contains the array of events\n      } catch (error) {\n        // Handle error\n        if (error.response && error.response.data) {\n          setError(error.response.data.error || 'Failed to fetch events. Please try again later.');\n        } else {\n          setError('Failed to fetch events. Please try again later.');\n        }\n      }\n    };\n    fetchEvents(); // Fetch events on component mount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upcoming Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this), \" \", events.length > 0 ? events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: event.imageUrl,\n        alt: event.organizer,\n        className: \"event-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Organizer: \", event.organizer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", event.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time: \", event.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fee: $\", event.fee]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"register-button\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this)]\n    }, event.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No events available at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(EventPage, \"sG28q1N/PyVtdAr4UopKRwzCNVg=\", false, function () {\n  return [useNavigate];\n});\n_c = EventPage;\nexport default EventPage;\nvar _c;\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","EventPage","_s","navigate","events","setEvents","error","setError","message","setMessage","fetchEvents","response","get","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","event","src","imageUrl","alt","organizer","date","time","fee","id","_c","$RefreshReg$"],"sources":["D:/infy/ass3/BATCH-1/Frontend/src/components/EventPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './events.css'; // Import the CSS\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\r\n\r\nconst EventPage = () => {\r\n    const navigate = useNavigate();\r\n    const [events, setEvents] = useState([]); // For storing events\r\n    const [error, setError] = useState(''); // For error messages\r\n    const [message, setMessage] = useState(''); // For success messages\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            try {\r\n                // Clear previous messages\r\n                setError('');\r\n                setMessage('');\r\n\r\n                // Make a GET request to the backend events endpoint\r\n                const response = await axios.get('http://localhost:8080/api/events');\r\n                setEvents(response.data); // Assuming response.data contains the array of events\r\n            } catch (error) {\r\n                // Handle error\r\n                if (error.response && error.response.data) {\r\n                    setError(error.response.data.error || 'Failed to fetch events. Please try again later.');\r\n                } else {\r\n                    setError('Failed to fetch events. Please try again later.');\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchEvents(); // Fetch events on component mount\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"event-container\">\r\n            <h2>Upcoming Events</h2>\r\n            {error && <p className=\"error-message\">{error}</p>} {/* Show error message if exists */}\r\n            {events.length > 0 ? (\r\n                events.map(event => (\r\n                    <div key={event.id} className=\"event-box\">\r\n                        <img src={event.imageUrl} alt={event.organizer} className=\"event-image\" />\r\n                        <div className=\"event-details\">\r\n                            <h3>Organizer: {event.organizer}</h3>\r\n                            <p>Date: {event.date}</p>\r\n                            <p>Time: {event.time}</p>\r\n                            <p>Fee: ${event.fee}</p>\r\n                            <button className=\"register-button\">Register</button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No events available at the moment.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}